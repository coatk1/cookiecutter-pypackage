# A configuration file for setup.py

[metadata]
# This includes the license file(s) in the wheel.
# https://wheel.readthedocs.io/en/stable/user_guide.html#including-license-files-in-the-generated-wheel-file
# license_files = LICENSE.md

[bumpversion]
current_version = {{ cookiecutter.version }}
commit = True
tag = True

[bumpversion:file:setup.py]
search = version='{current_version}'
replace = version='{new_version}'

[bumpversion:file:{{ cookiecutter.project_slug }}/__init__.py]
search = __version__ = '{current_version}'
replace = __version__ = '{new_version}'

[bdist_wheel]
universal = 1

[flake8]
# Flake8 to check PEP8.
# CLI option: flake8 --filename=*.py --ignore=E501,F401 --statistics {{ cookiecutter.project_slug }}/
filename = *.py
ignore =
    # E501 line too long (92 > 79 characters)
    E501,
    # F401 'file' imported but not used
    F401

[pydocstyle]
# pydocstyle to check PEP257.
convention = numpy

[aliases]
# Define setup.py command aliases here
{%- if cookiecutter.use_pytest == 'y' %}
test = pytest

[tool:pytest]
# Test code and code coverage with pytest. Use tool:pytest for setup.cfg.
collect_ignore = ['setup.py']
addopts =
    --verbose
    --durations=0
    # --cov-config=setup.cfg
    --cov={{ cookiecutter.project_slug }}
    --cov-report=term-missing
    --doctest-glob='{{ cookiecutter.project_slug }}/*.rst'
# --doctest-modules
{%- endif %}

[report]
# Check code coverage with pytest-cov extension.
# Coverage.py
omit =

precision = 2

# Doesn't work with GitHub Actions.
# skip_empty = False

[versioneer]
# See the docstring in versioneer.py for instructions. Note that you must
# re-run 'versioneer.py setup' after changing this section, and commit the
# resulting files.
VCS = git
style = pep440
versionfile_source = {{ cookiecutter.project_slug }}/_version.py
versionfile_build = {{ cookiecutter.project_slug }}/_version.py
tag_prefix =
parentdir_prefix = {{ cookiecutter.project_slug }}-
